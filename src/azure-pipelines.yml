# Deploys to Azure App Service using an arm template for infrastructure setup.

trigger:
- main
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  resourceGroupName: 'rg-test-shared-uks'
  resourceGroupLocation: 'uksouth'
  appPlanName: 'coolbananas'
  appName: 'coolbananas-123'
  buildConfiguration: 'Release'
  major: 1
  minor: 0
  patch: $[counter(format('{0}.{1}', variables['major'], variables['minor']), 0)]
  version: $[format('{0}.{1}.{2}', variables['major'], variables['minor'], variables['patch'])]

name: $(appName) $(version)

steps:
- task: AzureResourceManagerTemplateDeployment@3
  displayName: Deploy infrastructure
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: '$(azureSubscription)'
    subscriptionId: '$(subscriptionId)'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '$(resourceGroupName)'
    location: '$(resourceGroupLocation)'
    templateLocation: 'Linked artifact'
    csmFile: 'src/azuredeploy.json'
    overrideParameters: '-appPlanName $(appPlanName) -appName $(appName)'
    deploymentMode: 'Incremental'

- script: dotnet restore src/
  displayName: dotnet restore

- script: dotnet build src/ --configuration $(buildConfiguration) --no-restore
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test src/ --configuration $(buildConfiguration) --no-restore -- no-build
  displayName: 'dotnet test'

- task: DotNetCoreCLI@2
  displayName: dotnet publish
  inputs:
    command: 'publish'
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) --no-restore --no-build'
    zipAfterPublish: True

- task: AzureWebApp@1
  displayName: 'Azure Web App Deploy'
  inputs:
    azureSubscription: $(azureSubscription)
    appType: webAppLinux
    appName: $(appName)
    package: $(Build.ArtifactStagingDirectory)/**/*.zip
